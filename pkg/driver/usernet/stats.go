package usernet

import "gvisor.dev/gvisor/pkg/tcpip"

func prometheusStats() tcpip.Stats {
	return tcpip.Stats{
		UnknownProtocolRcvdPackets: nil,
		MalformedRcvdPackets:       nil,
		DroppedPackets:             nil,
		ICMP: tcpip.ICMPStats{
			V4PacketsSent: tcpip.ICMPv4SentPacketStats{
				ICMPv4PacketStats: tcpip.ICMPv4PacketStats{
					Echo:           nil,
					EchoReply:      nil,
					DstUnreachable: nil,
					SrcQuench:      nil,
					Redirect:       nil,
					TimeExceeded:   nil,
					ParamProblem:   nil,
					Timestamp:      nil,
					TimestampReply: nil,
					InfoRequest:    nil,
					InfoReply:      nil,
				},
				Dropped:     nil,
				RateLimited: nil,
			},
			V4PacketsReceived: tcpip.ICMPv4ReceivedPacketStats{
				ICMPv4PacketStats: tcpip.ICMPv4PacketStats{
					Echo:           nil,
					EchoReply:      nil,
					DstUnreachable: nil,
					SrcQuench:      nil,
					Redirect:       nil,
					TimeExceeded:   nil,
					ParamProblem:   nil,
					Timestamp:      nil,
					TimestampReply: nil,
					InfoRequest:    nil,
					InfoReply:      nil,
				},
				Invalid: nil,
			},
			V6PacketsSent: tcpip.ICMPv6SentPacketStats{
				ICMPv6PacketStats: tcpip.ICMPv6PacketStats{
					EchoRequest:     nil,
					EchoReply:       nil,
					DstUnreachable:  nil,
					PacketTooBig:    nil,
					TimeExceeded:    nil,
					ParamProblem:    nil,
					RouterSolicit:   nil,
					RouterAdvert:    nil,
					NeighborSolicit: nil,
					NeighborAdvert:  nil,
					RedirectMsg:     nil,
				},
				Dropped:     nil,
				RateLimited: nil,
			},
			V6PacketsReceived: tcpip.ICMPv6ReceivedPacketStats{
				ICMPv6PacketStats: tcpip.ICMPv6PacketStats{
					EchoRequest:     nil,
					EchoReply:       nil,
					DstUnreachable:  nil,
					PacketTooBig:    nil,
					TimeExceeded:    nil,
					ParamProblem:    nil,
					RouterSolicit:   nil,
					RouterAdvert:    nil,
					NeighborSolicit: nil,
					NeighborAdvert:  nil,
					RedirectMsg:     nil,
				},
				Invalid:                        nil,
				RouterOnlyPacketsDroppedByHost: nil,
			},
		},
		IP: tcpip.IPStats{
			PacketsReceived:                     nil,
			InvalidDestinationAddressesReceived: nil,
			InvalidSourceAddressesReceived:      nil,
			PacketsDelivered:                    nil,
			PacketsSent:                         nil,
			OutgoingPacketErrors:                nil,
			MalformedPacketsReceived:            nil,
			MalformedFragmentsReceived:          nil,
			IPTablesPreroutingDropped:           nil,
			IPTablesInputDropped:                nil,
			IPTablesOutputDropped:               nil,
		},
		TCP: tcpip.TCPStats{
			ActiveConnectionOpenings:           nil,
			PassiveConnectionOpenings:          nil,
			CurrentEstablished:                 nil,
			CurrentConnected:                   nil,
			EstablishedResets:                  nil,
			EstablishedClosed:                  nil,
			EstablishedTimedout:                nil,
			ListenOverflowSynDrop:              nil,
			ListenOverflowAckDrop:              nil,
			ListenOverflowSynCookieSent:        nil,
			ListenOverflowSynCookieRcvd:        nil,
			ListenOverflowInvalidSynCookieRcvd: nil,
			FailedConnectionAttempts:           nil,
			ValidSegmentsReceived:              nil,
			InvalidSegmentsReceived:            nil,
			SegmentsSent:                       nil,
			SegmentSendErrors:                  nil,
			ResetsSent:                         nil,
			ResetsReceived:                     nil,
			Retransmits:                        nil,
			FastRecovery:                       nil,
			SACKRecovery:                       nil,
			SlowStartRetransmits:               nil,
			FastRetransmit:                     nil,
			Timeouts:                           nil,
			ChecksumErrors:                     nil,
		},
		UDP: tcpip.UDPStats{
			PacketsReceived:          nil,
			UnknownPortErrors:        nil,
			ReceiveBufferErrors:      nil,
			MalformedPacketsReceived: nil,
			PacketsSent:              nil,
			PacketSendErrors:         nil,
			ChecksumErrors:           nil,
		},
	}
}
