name: Build

# yamllint disable-line rule:truthy
on:
  check_run:
    types:
    - rerequested
    - requested_action
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    tags:
    - v*

env:
  GO111MODULE: "on"

defaults:
  run:
    shell: bash

jobs:
  build-on-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        expire-in: 30m
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        # TODO: update to 1.15.x once 1.15.4 released
        go-version: 1.14.x

    - name: Build
      run: |
        make -j$(nproc --all) abbot.linux.all
        make -j$(nproc --all) abbot.darwin.all TAGS=''
        make -j$(nproc --all) abbot.windows.all TAGS=''
        make -j$(nproc --all) abbot.freebsd.all TAGS=''
        make -j$(nproc --all) abbot.netbsd.all TAGS=''
        make -j$(nproc --all) abbot.openbsd.all TAGS=''
        make -j$(nproc --all) abbot.plan9.all TAGS=''
        make -j$(nproc --all) abbot.solaris.amd64 TAGS=''
        make -j$(nproc --all) abbot.aix.ppc64 TAGS=''
        make -j$(nproc --all) abbot.dragonfly.amd64 TAGS=''

    - name: Package
      run: |
        make package.abbot.linux.all

    - name: Hash
      run: |
        os_list="linux darwin windows freebsd netbsd openbsd plan9 aix solaris dragonfly"

        cd build
        for os in ${os_list}; do
          sha256sum abbot.${os}* > sha256.${os}.txt
          sha512sum abbot.${os}* > sha512.${os}.txt
          md5sum abbot.${os}* > md5.${os}.txt
        done
        cd -

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-on-linux
        path: build

  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs:
    - build-on-linux
    runs-on: ubuntu-latest
    steps:
    - name: Download linux builds
      uses: actions/download-artifact@v2
      with:
        name: build-on-linux
        path: build

    - name: Extract tag name
      id: extract_tag
      run: |
        echo "::set-output name=tag::$(echo ${GITHUB_REF#refs/tags/})"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
        body: |
          # Release Notes

          ## Features

          - Add foo support #issue-ref
          - Add bar support #issue-ref

          ## Bug fixes

          - Fixed foo #issue-ref
          - Fixed bar #issue-ref #pr-ref

          ## Breaking Changes

          - Foo ...
          - Bar ...

          ## Images

          - `docker.io/arhatdev/abbot:${{ steps.extract_tag.outputs.tag }}`
          - `ghcr.io/arhat-dev/abbot:${{ steps.extract_tag.outputs.tag }}`

    #
    # checksums
    #
    - name: Create Checksum Files
      run: |
        files="sha256 sha512 md5"
        os_list="darwin windows freebsd netbsd openbsd plan9 aix solaris dragonfly"

        for f in ${files}; do
          printf "# Linux builds\n\n" > "build/${f}.txt"
          cat build/${f}.linux.txt >> "build/${f}.txt"

          for os in ${os_list}; do
            printf "\n# ${os} builds\n\n" >> "build/${f}.txt"
            cat build/${f}.${os}.txt >> "build/${f}.txt"
          done
        done

    - name: Upload sha256
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: sha256.txt
        asset_path: build/sha256.txt
        asset_content_type: text/plain

    - name: Upload sha512
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: sha512.txt
        asset_path: build/sha512.txt
        asset_content_type: text/plain

    - name: Upload md5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: md5.txt
        asset_path: build/md5.txt
        asset_content_type: text/plain

    - name: Upload abbot.darwin.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.darwin.amd64
        asset_path: build/abbot.darwin.amd64
        asset_content_type: application/octet-stream

    # TODO: support darwin/arm64 build
    # - name: Upload abbot.darwin.arm64
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: abbot.darwin.arm64
    #     asset_path: build/abbot.darwin.arm64
    #     asset_content_type: application/octet-stream

    - name: Upload abbot.windows.x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.windows.x86.exe
        asset_path: build/abbot.windows.x86.exe
        asset_content_type: application/x-ms-dos-executable

    - name: Upload abbot.windows.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.windows.amd64.exe
        asset_path: build/abbot.windows.amd64.exe
        asset_content_type: application/x-ms-dos-executable

    - name: Upload abbot.windows.armv5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.windows.armv5.exe
        asset_path: build/abbot.windows.armv5.exe
        asset_content_type: application/x-ms-dos-executable

    - name: Upload abbot.windows.armv6
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.windows.armv6.exe
        asset_path: build/abbot.windows.armv6.exe
        asset_content_type: application/x-ms-dos-executable

    - name: Upload abbot.windows.armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.windows.armv7.exe
        asset_path: build/abbot.windows.armv7.exe
        asset_content_type: application/x-ms-dos-executable

    - name: Upload abbot.linux.x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.x86
        asset_path: build/abbot.linux.x86
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.amd64
        asset_path: build/abbot.linux.amd64
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.armv5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.armv5
        asset_path: build/abbot.linux.armv5
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.armv6
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.armv6
        asset_path: build/abbot.linux.armv6
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.armv7
        asset_path: build/abbot.linux.armv7
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.arm64
        asset_path: build/abbot.linux.arm64
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.ppc64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.ppc64
        asset_path: build/abbot.linux.ppc64
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.ppc64le
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.ppc64le
        asset_path: build/abbot.linux.ppc64le
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.s390x
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.s390x
        asset_path: build/abbot.linux.s390x
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mips
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mips
        asset_path: build/abbot.linux.mips
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mipshf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mipshf
        asset_path: build/abbot.linux.mipshf
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mipsle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mipsle
        asset_path: build/abbot.linux.mipsle
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mipslehf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mipslehf
        asset_path: build/abbot.linux.mipslehf
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mips64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mips64
        asset_path: build/abbot.linux.mips64
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mips64hf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mips64hf
        asset_path: build/abbot.linux.mips64hf
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mips64le
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mips64le
        asset_path: build/abbot.linux.mips64le
        asset_content_type: application/octet-stream

    - name: Upload abbot.linux.mips64lehf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.linux.mips64lehf
        asset_path: build/abbot.linux.mips64lehf
        asset_content_type: application/octet-stream

    - name: Upload abbot.freebsd.x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.freebsd.x86
        asset_path: build/abbot.freebsd.x86
        asset_content_type: application/octet-stream

    - name: Upload abbot.freebsd.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.freebsd.amd64
        asset_path: build/abbot.freebsd.amd64
        asset_content_type: application/octet-stream

    - name: Upload abbot.freebsd.armv5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.freebsd.armv5
        asset_path: build/abbot.freebsd.armv5
        asset_content_type: application/octet-stream

    - name: Upload abbot.freebsd.armv6
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.freebsd.armv6
        asset_path: build/abbot.freebsd.armv6
        asset_content_type: application/octet-stream

    - name: Upload abbot.freebsd.armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.freebsd.armv7
        asset_path: build/abbot.freebsd.armv7
        asset_content_type: application/octet-stream

    - name: Upload abbot.freebsd.arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.freebsd.arm64
        asset_path: build/abbot.freebsd.arm64
        asset_content_type: application/octet-stream

    - name: Upload abbot.openbsd.x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.openbsd.x86
        asset_path: build/abbot.openbsd.x86
        asset_content_type: application/octet-stream

    - name: Upload abbot.openbsd.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.openbsd.amd64
        asset_path: build/abbot.openbsd.amd64
        asset_content_type: application/octet-stream

    - name: Upload abbot.openbsd.armv5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.openbsd.armv5
        asset_path: build/abbot.openbsd.armv5
        asset_content_type: application/octet-stream

    - name: Upload abbot.openbsd.armv6
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.openbsd.armv6
        asset_path: build/abbot.openbsd.armv6
        asset_content_type: application/octet-stream

    - name: Upload abbot.openbsd.armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.openbsd.armv7
        asset_path: build/abbot.openbsd.armv7
        asset_content_type: application/octet-stream

    - name: Upload abbot.openbsd.arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.openbsd.arm64
        asset_path: build/abbot.openbsd.arm64
        asset_content_type: application/octet-stream

    - name: Upload abbot.netbsd.x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.netbsd.x86
        asset_path: build/abbot.netbsd.x86
        asset_content_type: application/octet-stream

    - name: Upload abbot.netbsd.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.netbsd.amd64
        asset_path: build/abbot.netbsd.amd64
        asset_content_type: application/octet-stream

    - name: Upload abbot.netbsd.armv5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.netbsd.armv5
        asset_path: build/abbot.netbsd.armv5
        asset_content_type: application/octet-stream

    - name: Upload abbot.netbsd.armv6
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.netbsd.armv6
        asset_path: build/abbot.netbsd.armv6
        asset_content_type: application/octet-stream

    - name: Upload abbot.netbsd.armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.netbsd.armv7
        asset_path: build/abbot.netbsd.armv7
        asset_content_type: application/octet-stream

    - name: Upload abbot.netbsd.arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.netbsd.arm64
        asset_path: build/abbot.netbsd.arm64
        asset_content_type: application/octet-stream

    - name: Upload abbot.plan9.x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.plan9.x86
        asset_path: build/abbot.plan9.x86
        asset_content_type: application/octet-stream

    - name: Upload abbot.plan9.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.plan9.amd64
        asset_path: build/abbot.plan9.amd64
        asset_content_type: application/octet-stream

    - name: Upload abbot.plan9.armv5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.plan9.armv5
        asset_path: build/abbot.plan9.armv5
        asset_content_type: application/octet-stream

    - name: Upload abbot.plan9.armv6
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.plan9.armv6
        asset_path: build/abbot.plan9.armv6
        asset_content_type: application/octet-stream

    - name: Upload abbot.plan9.armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.plan9.armv7
        asset_path: build/abbot.plan9.armv7
        asset_content_type: application/octet-stream

    - name: Upload abbot.dragonfly.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.dragonfly.amd64
        asset_path: build/abbot.dragonfly.amd64
        asset_content_type: application/octet-stream

    - name: Upload abbot.solaris.amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.solaris.amd64
        asset_path: build/abbot.solaris.amd64
        asset_content_type: application/octet-stream

    #
    # packages
    #

    - name: Upload abbot-amd64.deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.amd64.deb
        asset_path: build/abbot.amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload abbot-x86_64.rpm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.x86_64.rpm
        asset_path: build/abbot.x86_64.rpm
        asset_content_type: application/x-rpm

    - name: Upload abbot-armel.deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.armel.deb
        asset_path: build/abbot.armel.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload abbot-armhf.deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.armhf.deb
        asset_path: build/abbot.armhf.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload abbot-armhfp.rpm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.armhfp.rpm
        asset_path: build/abbot.armhfp.rpm
        asset_content_type: application/x-rpm

    - name: Upload abbot-arm64.deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.arm64.deb
        asset_path: build/abbot.arm64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload abbot-aarch64.rpm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: abbot.aarch64.rpm
        asset_path: build/abbot.aarch64.rpm
        asset_content_type: application/x-rpm

    # - name: Upload abbot-arm64.msi
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: abbot.arm64.msi
    #     asset_path: build/abbot.arm64.msi
    #     asset_content_type: application/x-msdownload

    # - name: Upload abbot-amd64.msi
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: abbot.amd64.msi
    #     asset_path: build/abbot.amd64.msi
    #     asset_content_type: application/x-msdownload

    # - name: Upload abbot-arm64.pkg
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: abbot.arm64.pkg
    #     asset_path: build/abbot.arm64.pkg
    #     asset_content_type: application/octet-stream

    # - name: Upload abbot-amd64.pkg
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_name: abbot.amd64.pkg
    #     asset_path: build/abbot.amd64.pkg
    #     asset_content_type: application/octet-stream
