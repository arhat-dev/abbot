---
# Source: abbot/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: abbot
  namespace: default
  labels:
    helm.sh/chart: abbot-0.1.0
    app.kubernetes.io/name: abbot
    app.kubernetes.io/instance: abbot
    arhat.dev/role: Abbot
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    abbot:
      listen: unix:///var/run/abbot.sock
      log:
      - file: stderr
        format: console
        level: verbose
    containerNetwork:
      cniPluginsLookupPaths:
      - /opt/cni/bin
      containerInterfaceName: eth0
      dataDir: /var/lib/abbot/container
      template: |
        {
          "cniVersion": "0.3.1",
          "name": "abbot",
          "plugins": [
            {
              "type": "bridge",
              "bridge": "abbot0",
              "isGateway": true,
              "isDefaultGateway": true,
              "ipMasq": true,
              "forceAddress": true,
              "ipam": {
                "type": "host-local",
                "ranges": [{{ if gt (len .IPv4Subnet) 0 }}
                  [{
                    "subnet": "{{ .IPv4Subnet }}",
                    "routes": [{ "dst": "0.0.0.0/0" }]
                  }]{{ end }}{{ if and (gt (len .IPv6Subnet) 0) (gt (len .IPv4Subnet) 0) }},{{ end }}{{ if gt (len .IPv6Subnet) 0 }}
                  [{
                    "subnet": "{{ .IPv6Subnet }}"
                  }]{{ end }}
                ]
              }
            },
            {
              "type": "portmap",
              "capabilities": { "portMappings": true }
            },
            {
              "type": "bandwidth",
              "capabilities": { "bandwidth": true }
            }
          ]
        }
    hostNetwork:
      interfaces:
      - config:
          addresses:
          - 10.0.0.1/24
          alias: ""
          hardwareAddr: ""
          mtu: 1440
          promisc: false
          txQueueLen: 1000
        driver: bridge
        name: abbot0
      - config:
          addresses:
          - 10.100.0.1/32
          listenPort: 65510
          logLevel: debug
          mtu: 1400
          peers:
          - allowedIPs:
            - 10.100.0.2/32
            endpoint: localhost:1400
            persistentKeepaliveInterval: 10s
            preSharedKey: ""
            publicKey: xkmpiToCbDDAHgWnJl1GgnvIaCvwcS617UK1tVMpE3U=
          privateKey: mGmgXNWBjx2sQy2kRYcnpkHTAi9j7cCrQZzGKlK96ko=
          routing:
            enabled: true
            firewallMark: 0
            table: 0
        driver: wireguard
        name: utun5
      proxies:
      - address: 10.0.0.1
        ipRanges:
        - 172.16.0.0/16
        - 192.168.100.0/24
        protocols:
        - tcp
        - udp
        - icmp
        tproxy:
          mark: 0x01/0x01
          routing:
            rulePriority: null
            table: 200
          tcp: false
          udp: true
---
# Source: abbot/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: abbot
  namespace: default
  labels:
    helm.sh/chart: abbot-0.1.0
    app.kubernetes.io/name: abbot
    app.kubernetes.io/instance: abbot
    arhat.dev/role: Abbot
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: abbot
      app.kubernetes.io/instance: abbot
      arhat.dev/role: Abbot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: abbot
        app.kubernetes.io/instance: abbot
        arhat.dev/role: Abbot
    spec:
      securityContext:
        {}
      # only select nodes in this namespace
      nodeSelector:
        arhat.dev/namespace: default
      tolerations:
        - key: arhat.dev/namespace
          value: default
        - key: node.kubernetes.io/unschedulable
          operator: Exists
      hostPID: true
      hostNetwork: true
      containers:
        - name: abbot # abbot container name MUST be abbot
          image: "docker.io/arhatdev/abbot:latest"
          imagePullPolicy: Always
          command:
            - /abbot
            - -c
            - /etc/abbot/config.yaml
          securityContext:
            privileged: true
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - name: config
            mountPath: /etc/abbot
          - name: xtables-lock
            mountPath: /run/xtables.lock
          resources:
            {}
      volumes:
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: config
        configMap:
          name: abbot
